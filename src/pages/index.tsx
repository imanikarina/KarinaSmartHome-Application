import React, { useCallback, useState } from 'react';
import Head from 'next/head';
import tw from 'twin.macro';
import dynamic from 'next/dynamic';
import Script from 'next/script';
import styled from '@emotion/styled';
import DeviceInfo from '@/components/DeviceInfo';
import Button from '@/components/Button';
import useHomeViewModel from './index.viewModel';

//#region STYLED COMPONENTS
const Header = tw.header`w-full flex flex-col`;
const PageTitle = tw.div`bg-gray-600 h-20 text-white flex flex-row items-center justify-center text-3xl font-semibold`;
const PageSubtitle = tw.div`bg-gray-300 h-10 flex flex-row items-center justify-center font-semibold`;
const Main = tw.main`flex flex-row container px-20 py-8 space-x-12`;
const SectionHeader = styled.div`
  ${tw`flex flex-row justify-between items-baseline mb-3`}
  h2 {
    ${tw`font-semibold text-xl`}
  }
`;
const LogField = tw.div`h-44 bg-gray-100 border px-4 py-2 rounded text-gray-700 overflow-y-scroll`;
//#endregion

export default function Home() {
  const {isConnected, toggleConnection, lampHandler, acHandler} = useHomeViewModel();
  const DynamicCurrentTime = dynamic(() => import('../components/CurrentTime'), {
    ssr: false
  });

  return (
    <>
      <Head>
        <title>Karina Smart Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.2/mqttws31.min.js"></Script>
      <Header>
        <PageTitle>
          <h1>Karina's Smart Lamp & AC</h1>
        </PageTitle>
        <PageSubtitle>13519166 Karina Imani</PageSubtitle>
      </Header>
      <Main>

        {/** DEVICES */}
        <div tw='flex flex-row space-x-2'>
          <DeviceInfo
            deviceName="Lamp"
            isDeviceOn={lampHandler.isOn}
            changeHandlers={{
              onToggleDevice: lampHandler.toggleDevice,
              onTimerSubmit: lampHandler.handleTimerSubmit,
            }}
            sessionStart={lampHandler.startTime}
            onTimer={lampHandler.onTimer}
            offTimer={lampHandler.offTimer}
          />
          <DeviceInfo
            deviceName="AC"
            isDeviceOn={acHandler.isOn}
            changeHandlers={{
              onToggleDevice: acHandler.toggleDevice,
              onTimerSubmit: acHandler.handleTimerSubmit,
            }}
            sessionStart={acHandler.startTime}
            onTimer={acHandler.onTimer}
            offTimer={acHandler.offTimer}
          />
        </div>

        <div tw="flex-auto flex flex-col">
          
          {/** CONNECTIVITY INFO */}
          <div tw="mb-8">
            <p tw="mb-4">
              When you press the 'connect' button, the application will connect to broker.mqtt-dashboard.com on port 8000. Disconnect with the button that appears in its place.
            </p>
            <Button id="ConnectButton" onClick={toggleConnection}>
              {isConnected ? 'Disconnect' : 'Connect'}
            </Button>
          </div>

          {/** LOG & TIMER */}
          <div tw="flex-auto flex flex-col">
            <SectionHeader>
              <h2>Log</h2>
              <DynamicCurrentTime />
            </SectionHeader>
            <LogField>
              <code id="Log" />
            </LogField>
          </div>
        </div>
      </Main>
    </>
  );
}
